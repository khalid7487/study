******************************Installing procedure in windows 10************
----docs---
https://redis.io/docs/getting-started/installation/install-redis-on-windows/

1. go windows sub systems and  install unbuntu 
after successfully install redis in ur system then :- 
--redis installing procedure in windows  unbuntu--

1. sudo apt-add-repository ppa:redislabs/redis
2. sudo apt-get update
3. sudo apt-get upgrade
4. sudo apt-get install redis-server

start cmd----

sudo service redis-server start

end cmd ----

sudo service redis-server stop


******************************what is redis server **********************************

Redis, which stands for Remote Dictionary Server, is a fast, open source, in-memory, key-value data store.
it is mainly used mainly used for nosql database caching . this database make your request super fast for 

Example::

suppose you need to fetch an api 400ms everytime . if you used redis server as cheching it will take only 30ms only


Redis working flow with mongoDB--


localhost:3000 <----- (express App with mongoDB )<-------->  Redis  <-------------> mongoDB

Explanation:

1st localhost want to get fetch data form backend then backend 1st qurey in 
caching server(redis) if data exists in caching server then it does not query 
mongoDB and durign that time data is super quick. but now you may think what 
happen if caching server does not have data during that time express app direct 
query mongoDB 1st then give data to font end then store it in caching server. =D







------------------------------Redis CLI----------------------------------------------

readis works with key value pair. and eveything in redis by default stirng 

go terminal :- 

node
Welcome to Node.js v14.17.6.
Type ".help" for more information.
> const redis = require('redis');
undefined
> const redisUrl = 'redis://127.0.0.1:6379'
undefined
> const client = redis.createClient(redisUrl)
undefined
> client

----------------------------set string data --
> client.set('hi', 'there')
true
> client.get('hi',console.log )
true
> null there
----------------------nested object data-----------

> client.hset('german', 'red', 'rot')
true
> client.hget('german', 'red', console.log())

true
> client.hget('german', 'red', console.log)
true
> null rot

***** add object at a time ******
> client.set('color', JSON.stringify( {root: 'red'} ))
true
> client.get('color',  (err, val) => console.log(JSON.parse(val)))    
true
> { root: 'red' }

**********************add set link list *******
> client.lpush('queue', 'abb', 'aff', 'dd3')
true
> client.lrange('queue', 0, -1, (err, items) => {console.log(items)});
true
> [ 'dd3', 'aff', 'abb', '3', '2', '1' ]

